---
title: "Final_Project"
author: "Zongyi Liu"
date: "2023-12-02"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Begin

```{r}
# example<-read.csv("cbecs2018_final_public.csv")

# example
```


```{r}
data_use<-read.csv("ppefenrol.csv")
```


```{r}
library(tidyverse)
library(stringr)

head(data_use)

# data_use_m_1 <- substr(data_use$provider_type_cd, 1:2, nchar(data_use$provider_type_cd))
# data_use_m_1
```


```{r}
# only keep the general type of each provider type

data_m_2 <- data_use %>% 
   mutate(provider_type = substr(provider_type_cd, 1, 2))
```


```{r}
data_m_3 <- data_use %>% 
  mutate(provider_I_O = substr(enrlmt_id, 1, 1))

head(data_m_3)

data_m_4 <-data_m_3%>%group_by(state_cdstr) %>%
  summarise(Percentage_I = mean(provider_I_O == "I"))

data_m_4
```


```{r}
# West Coast
data_m_pacific <- data_m_2%>%
  filter(state_cdstr==c("CA","WA","OR"))

data_m_pacific
```


```{r}
# Northeastern

data_m_northeast <- data_m_2%>%filter(state_cdstr==c("ME","NH","VT","MA","CT","RI","NY","PA","NJ"))

data_m_northeast
```


```{r}
# Midwest

data_m_midwest <- data_m_2%>%filter(state_cdstr==c("MI","OH","IN","IL","WI"))

data_m_midwest
```


```{r}
# Type of provider within each states

ggplot(data_m_pacific, aes(x = state_cdstr, fill = provider_type)) +
  geom_bar(position = "dodge") +
  labs(title = "Distribution of Providers by State",
       x = "State",
       y = "Count",
       fill = "Provider Type") +
  #facet_wrap(~state_cdstr, scales = "free_y") +
  facet_wrap(~state_cdstr, scales = "free_y") +
  theme_minimal()


ggplot(data_m_northeast, aes(x = state_cdstr, fill = provider_type)) +
  geom_bar(position = "dodge") +
  labs(title = "Distribution of Providers by State",
       x = "State",
       y = "Count",
       fill = "Provider Type") +
  #facet_wrap(~state_cdstr, scales = "free_y") +
  facet_wrap(~state_cdstr, scales = "free_y") +
  theme_minimal()



ggplot(data_m_midwest, aes(x = state_cdstr, fill = provider_type)) +
  geom_bar(position = "dodge") +
  labs(title = "Distribution of Providers by State",
       x = "State",
       y = "Count",
       fill = "Provider Type") +
  #facet_wrap(~state_cdstr, scales = "free_y") +
  facet_wrap(~state_cdstr, scales = "free_y") +
  theme_minimal()
```

```{r}
# States and regions within each type

ggplot(data_m_pacific, aes(x = state_cdstr, fill = provider_type)) +
  geom_bar(position = "dodge") +
  labs(title = "Distribution of Providers by State",
       x = "State",
       y = "Count",
       fill = "Provider Type") +
  #facet_wrap(~state_cdstr, scales = "free_y") +
  facet_wrap(~provider_type, scales = "free_y") +
  theme_minimal()


ggplot(data_m_northeast, aes(x = state_cdstr, fill = provider_type)) +
  geom_bar(position = "dodge") +
  labs(title = "Distribution of Providers by State",
       x = "State",
       y = "Count",
       fill = "Provider Type") +
  #facet_wrap(~state_cdstr, scales = "free_y") +
  facet_wrap(~provider_type, scales = "free_y") +
  theme_minimal()



ggplot(data_m_midwest, aes(x = state_cdstr, fill = provider_type)) +
  geom_bar(position = "dodge") +
  labs(title = "Distribution of Providers by State",
       x = "State",
       y = "Count",
       fill = "Provider Type") +
  #facet_wrap(~state_cdstr, scales = "free_y") +
  facet_wrap(~provider_type, scales = "free_y") +
  theme_minimal()
```


```{r}
library(ggplot2)

ggplot(data_m_3, aes(x = state_cdstr, fill = provider_I_O)) +
  geom_bar(position = "dodge") +
  labs(title = "Distribution of Providers by State",
       x = "State",
       y = "Count",
       fill = "Provider Type") +
  #facet_wrap(~state_cdstr, scales = "free_y") +
  facet_wrap(~provider_I_O, scales = "free_y") +
  theme_minimal()


# 不同的州之间provider数量差异极大
```

> 都是些什麼
>
> npi: A 10-digit unique numeric identifier that all providers must obtain before enrolling in Medicare. It is assigned to health care providers upon application through the National Plan and Provider Enumeration System (NPPES). Unlike enrollment IDs, there is no provider information embedded within any of the digits of NPIs.
>
> 懶得寫英文了
>
> -   国家提供者标识符 (NPI)：所有提供者在加入 Medicare 之前必须获得的 10 位唯一数字标识符。 它根据国家计划和提供者枚举系统 (NPPES) 的申请分配给医疗保健提供者。 与注册 ID 不同，NPI 的任何数字中都没有嵌入提供商信息。
>
> -   pecos_asct_cntl_id: 分配给 PECOS 中每个个人或组织的 10 位唯一数字标识符。 PECOS 中的所有实体级信息（例如，税号和组织名称）都通过 PAC ID 链接。 如果个人或组织在不同情况下多次注册，则 PAC ID 可能与多个注册 ID 相关联。 与注册 ID 不同，PAC ID 的任何数字中都没有嵌入提供商信息。
>
> -   Enrollment ID/enrlmt_id: 分配给每个新提供商注册申请的 15 位唯一字母数字标识符。 PECOS 中的所有注册级别信息（例如注册类型、注册状态、提供者专业、福利重新分配）都通过注册 ID 链接。 个人注册 ID 以"I"开头，组织注册 ID 以"O"开头。
>
> -   Provider Type: 提供商提交的注册申请的类型。 机构提供者提交表格 CMS-855A； 诊所、团体诊所和一些供应商提交表格 CMS-855I； 符合资格的预约和转诊医生以及非执业医师提交表格 CMS-855O； 耐用医疗设备 (DME) 供应商提交表格 CMS-855S。
>
> 其实就目前而言它只 release 了这些

### Occurrence of diff states

```{r}
state_counts <- table(data_use$state_cdstr)

# Create a data frame with state and count
state_counts_df <- data.frame(state = names(state_counts), count = as.numeric(state_counts))

# Sort the data frame by count in descending order
state_counts_df <- state_counts_df[order(-state_counts_df$count), ]

# Print or display the result
print(state_counts_df)

# This also helps: print(table(data_use$state_cdstr))

ggplot(state_counts_df, aes(x = state, y = count, fill = state)) +
  geom_bar(stat = "identity") +
  labs(title = "Number in Each State",
       x = "State",
       y = "Count") +
  theme_minimal()
```

```{r}
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel","ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
```

```{r}
# install.packages("usmap")
library(usmap)
library(ggplot2)

plot_usmap(
  data = state_counts_df, values = "count", lines = "red"
) + 
  scale_fill_continuous(
    low = "white", high = "red", name = "Number", label = scales::comma
  ) + 
  labs(title = "Number of Providers", subtitle = "For each state in 2019") +
  theme(legend.position = "right")
```


```{r}
state <- map_data("state")

ggplot(data=state_counts_df, aes(x=long, y=lat, fill=provider_I_O, group=group)) + 
  geom_polygon(color = "white") + 
  guides(fill=FALSE) + 
  theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(),
        axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + 
  ggtitle('U.S. Map with States') + 
  coord_fixed(1.3)

state
```



### Frequency of diff providers

```{r}
# print(table(data_use$pecos_asct_cntl_id))

# 很多很多
```

```{r}
table(data_use$provider_type_desc)
```

# Question

1.  Pose a research question that can be answered using publicly available data.

    \

```{r}
data_2_used <-read.csv("ppefreassign.csv")
data_2_used
```

```{r}
data_3_used <-read.csv("ppefspec.csv")

data_3_used
```

```{r}
data_4_used <-read.csv("ppefaddr.csv")

data_4_used
```
